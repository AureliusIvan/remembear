[
  {
    "name": "RememberService.py",
    "path": "server/domain/service/RememberService.py",
    "content": {
      "structured": {
        "description": "A class `RememberService` that provides a conversational AI assistant named Bear, which uses a generative model to respond to user questions and stores user conversations. The service utilizes the Google Generative AI API to generate human-like responses and stores user memories using an internal memory storage component.",
        "items": []
      }
    }
  },
  {
    "name": "TriggerService.py",
    "path": "server/domain/service/TriggerService.py",
    "content": {
      "structured": {
        "description": "A TriggerService class that parses a raw message and extracts specific data from it. It uses json and re packages to extract and parse JSON objects within the input string. The extracted data is then processed into a list of actions with their respective types, titles, bodies, and timestamps.",
        "items": []
      }
    }
  },
  {
    "name": "background.js",
    "path": "web/public/background.js",
    "content": {
      "structured": {
        "description": "Event listeners and handlers for push notifications using the Capacitor PushNotifications library. It registers event listeners for registration, error, received, and action performed events, logging information to the console. The code also checks for push notification permissions, requests them if necessary, and registers the device to receive notifications.",
        "items": [
          {
            "id": "e23c9f64-9088-5abb-c846-0d86d26eb523",
            "ancestors": [
              "3c176ee2-0f4f-2fbb-6549-1a2b5c63b2d1"
            ],
            "description": "Listens for push notifications and logs their tokens.",
            "name": null,
            "location": {
              "start": 18,
              "insert": 19,
              "offset": " ",
              "indent": 4,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 5,
            "docLength": null
          },
          {
            "id": "d3a0da30-85a0-589c-4847-30ed6be429bf",
            "ancestors": [
              "3c176ee2-0f4f-2fbb-6549-1a2b5c63b2d1"
            ],
            "description": "Listens for push notification registration errors and logs them.",
            "name": null,
            "location": {
              "start": 24,
              "insert": 25,
              "offset": " ",
              "indent": 4,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 5,
            "docLength": null
          },
          {
            "id": "4b4f88b8-24e3-f685-514e-d45f4f674ebf",
            "ancestors": [
              "3c176ee2-0f4f-2fbb-6549-1a2b5c63b2d1"
            ],
            "description": "Subscribes to and logs push notifications.",
            "name": null,
            "location": {
              "start": 30,
              "insert": 31,
              "offset": " ",
              "indent": 4,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 5,
            "docLength": null
          },
          {
            "id": "4290657d-dc9e-aa97-f04f-e7bb3a55fd1f",
            "ancestors": [
              "3c176ee2-0f4f-2fbb-6549-1a2b5c63b2d1"
            ],
            "description": "Listens and logs actions of push notifications.",
            "name": null,
            "location": {
              "start": 36,
              "insert": 37,
              "offset": " ",
              "indent": 4,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 5,
            "docLength": null
          }
        ]
      }
    }
  },
  {
    "name": "page.tsx",
    "path": "web/src/app/integration/page.tsx",
    "content": {
      "structured": {
        "description": "A React component called \"Integration\" that renders a form with a main section containing an integration heading and a list of links to external platforms wrapped in buttons. The component utilizes Next.js's Link component from \"next/link\" to render these links. The styles for the buttons are defined using the \"buttonVariants\" function, which is imported from another file.",
        "items": []
      }
    }
  },
  {
    "name": "page.tsx",
    "path": "web/src/app/login/page.tsx",
    "content": {
      "structured": {
        "description": "A React functional component named `Login`. The component returns an HTML form with a main content area and a heading that says \"Login\". It includes a link to log in with Google, styled according to the `buttonVariants` function from a UI button component.",
        "items": []
      }
    }
  },
  {
    "name": "not-found.tsx",
    "path": "web/src/app/not-found.tsx",
    "content": {
      "structured": {
        "description": "A React component called `NotFound` that renders a UI element for displaying \"Not Found\" messages. The component uses the Next.js framework and utilizes its `Link` component to provide a link back to the home page when a requested resource is not found. The JSX elements comprise of an `<h2>` heading, a paragraph with a brief description, and a link to return to the home page.",
        "items": []
      }
    }
  },
  {
    "name": "page.tsx",
    "path": "web/src/app/page.tsx",
    "content": {
      "structured": {
        "description": "A React component that renders a chat interface for users to send prompts and receive responses from a model. It utilizes react-hook-form for form handling and useEffect for initializing and updating the chat history state. The component fetches and stores local storage, updates the UI in real-time as new messages are added or fetched, and includes a form to send user input to the model for response.",
        "items": [
          {
            "id": "aa9ff932-b4ac-e9ad-9b4c-aef535e722f2",
            "ancestors": [
              "8d411b81-663f-b297-2344-d876cbdd0940",
              "1c331ed5-cd43-0db7-1641-6c8653c8cbfb"
            ],
            "description": "Concatenates new chat items.",
            "name": null,
            "location": {
              "start": 61,
              "insert": 62,
              "offset": " ",
              "indent": 10,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 5,
            "docLength": null
          },
          {
            "id": "26dd1b59-8bba-e885-1245-990700e80b90",
            "ancestors": [
              "8d411b81-663f-b297-2344-d876cbdd0940"
            ],
            "description": "Initializes and updates chat history state.",
            "name": null,
            "location": {
              "start": 76,
              "insert": 77,
              "offset": " ",
              "indent": 4,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 27,
            "docLength": null
          },
          {
            "id": "4b44cc6e-7a14-6284-564f-cdfecd01f46f",
            "ancestors": [
              "8d411b81-663f-b297-2344-d876cbdd0940",
              "26dd1b59-8bba-e885-1245-990700e80b90",
              "d6948fae-e77a-258a-8a4f-cb1b9a00452e"
            ],
            "description": "Retrieves and parses chat history.",
            "name": null,
            "location": {
              "start": 93,
              "insert": 94,
              "offset": " ",
              "indent": 10,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 5,
            "docLength": null
          },
          {
            "id": "f04f0636-bdcd-74af-4b46-09344cf7893d",
            "ancestors": [
              "8d411b81-663f-b297-2344-d876cbdd0940"
            ],
            "description": "Renders chat messages.",
            "name": null,
            "location": {
              "start": 115,
              "insert": 116,
              "offset": " ",
              "indent": 14,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 19,
            "docLength": null
          }
        ]
      }
    }
  },
  {
    "name": "page.tsx",
    "path": "web/src/app/setting/page.tsx",
    "content": {
      "structured": {
        "description": "A React component that initializes and manages push notifications for an application using Capacitor's PushNotifications plugin. It checks for available permissions, requests permission if not granted, registers with Apple/Google, and listens for registration success/failure, push notification receipt, and action performed events. The component displays a toast message on successful registration and handles errors.",
        "items": [
          {
            "id": "8e74959e-1f87-df8e-0c44-79e77e2e1148",
            "ancestors": [
              "2303117a-86fb-c796-9d4e-f845945a92fa"
            ],
            "description": "Initializes push notifications if available.",
            "name": null,
            "location": {
              "start": 37,
              "insert": 38,
              "offset": " ",
              "indent": 4,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 31,
            "docLength": null
          },
          {
            "id": "f866acc3-023d-5eb3-3b4f-ac8cea7f2955",
            "ancestors": [
              "2303117a-86fb-c796-9d4e-f845945a92fa",
              "8e74959e-1f87-df8e-0c44-79e77e2e1148"
            ],
            "description": "Handles push notifications permissions.",
            "name": null,
            "location": {
              "start": 45,
              "insert": 46,
              "offset": " ",
              "indent": 6,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 22,
            "docLength": null
          },
          {
            "id": "e4fcc6fd-7efc-7494-2242-d58385508083",
            "ancestors": [
              "2303117a-86fb-c796-9d4e-f845945a92fa",
              "8e74959e-1f87-df8e-0c44-79e77e2e1148",
              "f866acc3-023d-5eb3-3b4f-ac8cea7f2955"
            ],
            "description": "Handles push notification permissions.",
            "name": null,
            "location": {
              "start": 49,
              "insert": 50,
              "offset": " ",
              "indent": 10,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 14,
            "docLength": null
          },
          {
            "id": "722ea409-b0e3-d09a-f945-38f08c7ad808",
            "ancestors": [
              "2303117a-86fb-c796-9d4e-f845945a92fa",
              "6d005373-e9ba-1991-1141-0dfdc9c2b196"
            ],
            "description": "Registers for push notifications and handles registration success.",
            "name": null,
            "location": {
              "start": 86,
              "insert": 90,
              "offset": " ",
              "indent": 10,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 11,
            "docLength": null
          },
          {
            "id": "23d75a00-b68c-f1a4-e34c-cff7b785746e",
            "ancestors": [
              "2303117a-86fb-c796-9d4e-f845945a92fa",
              "6d005373-e9ba-1991-1141-0dfdc9c2b196"
            ],
            "description": "Handles registration error notifications.",
            "name": null,
            "location": {
              "start": 99,
              "insert": 101,
              "offset": " ",
              "indent": 10,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 7,
            "docLength": null
          },
          {
            "id": "2da7eed2-d214-aa9b-f742-74b4384cdb1c",
            "ancestors": [
              "2303117a-86fb-c796-9d4e-f845945a92fa",
              "6d005373-e9ba-1991-1141-0dfdc9c2b196"
            ],
            "description": "Handles push notifications.",
            "name": null,
            "location": {
              "start": 108,
              "insert": 110,
              "offset": " ",
              "indent": 10,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 12,
            "docLength": null
          },
          {
            "id": "aed0c718-2eff-8487-d945-04ae1871c934",
            "ancestors": [
              "2303117a-86fb-c796-9d4e-f845945a92fa",
              "6d005373-e9ba-1991-1141-0dfdc9c2b196"
            ],
            "description": "Listens for push notifications and updates local state when notified.",
            "name": null,
            "location": {
              "start": 122,
              "insert": 124,
              "offset": " ",
              "indent": 10,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 12,
            "docLength": null
          }
        ]
      }
    }
  },
  {
    "name": "sonner.tsx",
    "path": "web/src/components/ui/sonner.tsx",
    "content": {
      "structured": {
        "description": "A React component called Toaster that uses the Next-Themes hook to retrieve the current theme and applies customized styles based on it. The component takes additional props, which are passed onto the Sonner component from the sonner package. The Toaster component wraps its children with the theme-provided styles and props, effectively rendering a toaster component with theme-dependent appearance.",
        "items": []
      }
    }
  },
  {
    "name": "toast.tsx",
    "path": "web/src/components/ui/toast.tsx",
    "content": {
      "structured": {
        "description": "A set of components and providers for implementing toast notifications in a React application using the Radix UI library. The components include ToastProvider, ToastViewport, Toast, ToastTitle, ToastDescription, and ToastClose, which are used to render customizable notification messages with optional actions and close buttons.",
        "items": [
          {
            "id": "7fc8a6c7-7fce-c4a3-a644-6cbd9aecb7a2",
            "ancestors": [],
            "description": "Forwards refs and props.",
            "name": null,
            "location": {
              "start": 43,
              "insert": 48,
              "offset": " ",
              "indent": 2,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 15,
            "docLength": null
          }
        ]
      }
    }
  },
  {
    "name": "toaster.tsx",
    "path": "web/src/components/ui/toaster.tsx",
    "content": {
      "structured": {
        "description": "A Toaster React component that renders a list of toast notifications provided by the useToast hook from the ui module. The toaster is wrapped in a ToastProvider and ToastViewport components to manage the toast notifications. The component uses React's map function to iterate over the toasts array returned by useToast, rendering each toast with its title, description, action and close button.",
        "items": [
          {
            "id": "26841969-c745-2f99-3d49-02f0c2c5ed0f",
            "ancestors": [
              "29fce682-093b-9db8-4e42-4400a2c9e817"
            ],
            "description": "Renders toast list.",
            "name": null,
            "location": {
              "start": 28,
              "insert": 29,
              "offset": " ",
              "indent": 10,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 16,
            "docLength": null
          }
        ]
      }
    }
  },
  {
    "name": "use-toast.ts",
    "path": "web/src/components/ui/use-toast.ts",
    "content": {
      "structured": {
        "description": "A toaster component using React's hooks API, inspired by react-hot-toast library. It uses a reducer and a dispatch function to manage a state object that stores an array of toast notifications. The toaster component provides methods for adding, updating, and dismissing toasts, enforcing a limit on the number of displayed toasts.",
        "items": [
          {
            "id": "2264bcab-5202-eaa6-124a-7b6cb7e34b32",
            "ancestors": [
              "f6bb57ff-3cdd-adb5-a047-61be5a9a87e4"
            ],
            "description": "Postpones removal of toast for a specified delay.",
            "name": null,
            "location": {
              "start": 87,
              "insert": 88,
              "offset": " ",
              "indent": 4,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 9,
            "docLength": null
          },
          {
            "id": "1a4cc80b-79de-5097-6e4c-b237166b0c52",
            "ancestors": [
              "6dc314ff-297d-9d9b-1649-09406e5cf009"
            ],
            "description": "Adds an ID to a removal queue.",
            "name": null,
            "location": {
              "start": 137,
              "insert": 138,
              "offset": " ",
              "indent": 10,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 5,
            "docLength": null
          },
          {
            "id": "2d3b9f7d-3fbe-8992-294a-d6d1a214d651",
            "ancestors": [
              "ae215a46-7cbd-f7b8-9145-221dcc71f041"
            ],
            "description": "Calls each listener with memoryState as argument.",
            "name": null,
            "location": {
              "start": 183,
              "insert": 184,
              "offset": " ",
              "indent": 4,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 5,
            "docLength": null
          },
          {
            "id": "7361661e-5ca7-7387-fe45-fea90542b90a",
            "ancestors": [
              "e79ec019-d993-49b5-d742-6a2f796a23a5"
            ],
            "description": "Adds/removes state update listener.",
            "name": null,
            "location": {
              "start": 263,
              "insert": 264,
              "offset": " ",
              "indent": 4,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 11,
            "docLength": null
          }
        ]
      }
    }
  },
  {
    "name": "NotificationService.ts",
    "path": "web/src/services/NotificationService.ts",
    "content": {
      "structured": {
        "description": "An interface for a notification and a function to schedule local notifications using the Capacitor Local Notifications module. The function checks for permission before scheduling the notification and logs a message if the background runner is triggered. It then schedules a local notification with the specified title, body, and date at which it should be displayed.",
        "items": []
      }
    }
  }
]