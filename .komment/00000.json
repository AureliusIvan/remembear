[
  {
    "name": "RememberService.py",
    "path": "server/domain/service/RememberService.py",
    "content": {
      "structured": {
        "description": "A personal AI assistant named Bear that helps users remember events and things they discuss. It uses OpenAI's Gemini API for text generation and Qdrant vector store for memory storage. The assistant can respond to user questions by generating human-like responses based on the input query and previous related memories.",
        "items": []
      }
    }
  },
  {
    "name": "TriggerService.py",
    "path": "server/domain/service/TriggerService.py",
    "content": {
      "structured": {
        "description": "A TriggerService class that parses a given message and extracts specific data from it. The parsing is done using JSON and regular expression. The parsed actions are returned as a list.",
        "items": []
      }
    }
  },
  {
    "name": "background.js",
    "path": "web/public/background.js",
    "content": {
      "structured": {
        "description": "And utilizes various event listeners and registration mechanisms for push notifications within a Capacitor application. It employs the PushNotifications package from @capacitor/push-notifications to monitor registration events, registration errors, received push notifications, and actions performed on such notifications. The code also requests permissions for push notification receipt and registers the device for notifications if necessary.",
        "items": [
          {
            "id": "cabc8139-cde1-a995-ed44-2121721f67c4",
            "ancestors": [
              "f2f1c5d5-70a6-309a-544c-ea6ea457f1cf"
            ],
            "description": "Listens for push registration events, logging the received token to the console.",
            "name": null,
            "location": {
              "start": 18,
              "insert": 19,
              "offset": " ",
              "indent": 4,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 5,
            "docLength": null
          },
          {
            "id": "6a8716ea-80e1-5e9d-a747-e0b074f1256b",
            "ancestors": [
              "f2f1c5d5-70a6-309a-544c-ea6ea457f1cf"
            ],
            "description": "Listens for and logs push notification registration errors.",
            "name": null,
            "location": {
              "start": 24,
              "insert": 25,
              "offset": " ",
              "indent": 4,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 5,
            "docLength": null
          },
          {
            "id": "d964997b-5502-f99d-7e42-e8626397225e",
            "ancestors": [
              "f2f1c5d5-70a6-309a-544c-ea6ea457f1cf"
            ],
            "description": "Subscribes to push notifications.",
            "name": null,
            "location": {
              "start": 30,
              "insert": 31,
              "offset": " ",
              "indent": 4,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 5,
            "docLength": null
          },
          {
            "id": "10059208-d66b-9c80-164e-f40a60e062b6",
            "ancestors": [
              "f2f1c5d5-70a6-309a-544c-ea6ea457f1cf"
            ],
            "description": "Listens for push notifications actions and logs them.",
            "name": null,
            "location": {
              "start": 36,
              "insert": 37,
              "offset": " ",
              "indent": 4,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 5,
            "docLength": null
          }
        ]
      }
    }
  },
  {
    "name": "page.tsx",
    "path": "web/src/app/integration/page.tsx",
    "content": {
      "structured": {
        "description": "A reusable React component called \"Integration\" that renders a form with a heading and a list of links to external platforms wrapped in styled buttons. The links are generated using Next.js's Link component from \"next/link\" package, and the button styles are applied using a function named \"buttonVariants\" from an imported UI component library.",
        "items": []
      }
    }
  },
  {
    "name": "page.tsx",
    "path": "web/src/app/login/page.tsx",
    "content": {
      "structured": {
        "description": "A React component called Login that renders an HTML form with a heading and a link to log in with Google. The link is styled using the `buttonVariants` function from the `/components/ui/button` module. The form is wrapped in a `<main>` element with a specific class name, indicating a flexible box layout with vertical alignment and padding.",
        "items": []
      }
    }
  },
  {
    "name": "not-found.tsx",
    "path": "web/src/app/not-found.tsx",
    "content": {
      "structured": {
        "description": "A React component named \"NotFound\" that renders a UI element displaying an error message when a requested resource is not found. The component uses Next.js's Link package to provide a link for users to return to the home page.",
        "items": []
      }
    }
  },
  {
    "name": "page.tsx",
    "path": "web/src/app/page.tsx",
    "content": {
      "structured": {
        "description": "A React component that renders a chat interface. It uses react-hook-form for form handling and useForm to manage input state. The component fetches chat history from local storage, updates it in real-time as new messages are added or fetched, and displays a list of chat messages with user input on the right and model output on the left.",
        "items": [
          {
            "id": "d0548135-1978-ac85-8745-c37ad38ae1f5",
            "ancestors": [
              "9dc9a358-93e7-17a2-6249-dd1f4454b296",
              "322c1c5e-fc5a-90b0-474a-1ae5da61ae7e"
            ],
            "description": "Concatenates a new chat item to an array.",
            "name": null,
            "location": {
              "start": 61,
              "insert": 62,
              "offset": " ",
              "indent": 10,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 5,
            "docLength": null
          },
          {
            "id": "2974321b-ade5-179f-7949-211afa8ac8ed",
            "ancestors": [
              "9dc9a358-93e7-17a2-6249-dd1f4454b296"
            ],
            "description": "Initializes and updates chat history state.",
            "name": null,
            "location": {
              "start": 76,
              "insert": 77,
              "offset": " ",
              "indent": 4,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 27,
            "docLength": null
          },
          {
            "id": "2442ab15-39ad-9fa6-cf43-6181ce7fe790",
            "ancestors": [
              "9dc9a358-93e7-17a2-6249-dd1f4454b296",
              "2974321b-ade5-179f-7949-211afa8ac8ed",
              "f5f957ee-954a-26a0-e548-1de502d2d4fd"
            ],
            "description": "Retrieves and parses chat history data.",
            "name": null,
            "location": {
              "start": 93,
              "insert": 94,
              "offset": " ",
              "indent": 10,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 5,
            "docLength": null
          },
          {
            "id": "aecf6b4c-5647-098d-9c4a-faf25d0498ec",
            "ancestors": [
              "9dc9a358-93e7-17a2-6249-dd1f4454b296"
            ],
            "description": "Maps over a chat array and renders messages.",
            "name": null,
            "location": {
              "start": 115,
              "insert": 116,
              "offset": " ",
              "indent": 14,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 19,
            "docLength": null
          }
        ]
      }
    }
  },
  {
    "name": "page.tsx",
    "path": "web/src/app/setting/page.tsx",
    "content": {
      "structured": {
        "description": "A React component that initializes and manages push notifications for an application. It checks for available permissions, requests permission if not granted, registers with Apple/Google, and listens for registration success/failure, push notification receipt, and action performed events using Capacitor's PushNotifications plugin. The component also uses the Notifier service to display a toast message upon successful registration and provides a drawer interface for user interaction.",
        "items": [
          {
            "id": "7cc41729-361a-d890-1747-ef1d895bc918",
            "ancestors": [
              "ba66e485-8f9e-3c99-024f-ee24d1df0fba"
            ],
            "description": "Initializes and registers push notifications.",
            "name": null,
            "location": {
              "start": 37,
              "insert": 38,
              "offset": " ",
              "indent": 4,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 31,
            "docLength": null
          },
          {
            "id": "ba8139e9-f5fa-37bf-d746-b917622ac7f4",
            "ancestors": [
              "ba66e485-8f9e-3c99-024f-ee24d1df0fba",
              "7cc41729-361a-d890-1747-ef1d895bc918"
            ],
            "description": "Handles push notification permissions.",
            "name": null,
            "location": {
              "start": 45,
              "insert": 46,
              "offset": " ",
              "indent": 6,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 22,
            "docLength": null
          },
          {
            "id": "7737a927-5da3-75b7-b249-c7638cd4c044",
            "ancestors": [
              "ba66e485-8f9e-3c99-024f-ee24d1df0fba",
              "7cc41729-361a-d890-1747-ef1d895bc918",
              "ba8139e9-f5fa-37bf-d746-b917622ac7f4"
            ],
            "description": "Handles push notification permissions.",
            "name": null,
            "location": {
              "start": 49,
              "insert": 50,
              "offset": " ",
              "indent": 10,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 14,
            "docLength": null
          },
          {
            "id": "7300328d-824c-14b5-094e-b8c773be8ef4",
            "ancestors": [
              "ba66e485-8f9e-3c99-024f-ee24d1df0fba",
              "172e6e85-9fcd-93a2-d648-2b3f3ab50bb5"
            ],
            "description": "Listens for push notification registrations and displays a toast upon successful registration.",
            "name": null,
            "location": {
              "start": 86,
              "insert": 90,
              "offset": " ",
              "indent": 10,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 11,
            "docLength": null
          },
          {
            "id": "f215a64b-128a-21a3-7b4b-5eec6eb3b5b3",
            "ancestors": [
              "ba66e485-8f9e-3c99-024f-ee24d1df0fba",
              "172e6e85-9fcd-93a2-d648-2b3f3ab50bb5"
            ],
            "description": "Handles registration errors.",
            "name": null,
            "location": {
              "start": 99,
              "insert": 101,
              "offset": " ",
              "indent": 10,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 7,
            "docLength": null
          },
          {
            "id": "e2d45213-692a-089e-5f48-b525c8993b18",
            "ancestors": [
              "ba66e485-8f9e-3c99-024f-ee24d1df0fba",
              "172e6e85-9fcd-93a2-d648-2b3f3ab50bb5"
            ],
            "description": "Handles push notifications.",
            "name": null,
            "location": {
              "start": 108,
              "insert": 110,
              "offset": " ",
              "indent": 10,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 12,
            "docLength": null
          },
          {
            "id": "a25da74d-adc5-2694-204c-af2e6b9e1d7e",
            "ancestors": [
              "ba66e485-8f9e-3c99-024f-ee24d1df0fba",
              "172e6e85-9fcd-93a2-d648-2b3f3ab50bb5"
            ],
            "description": "Handles push notifications.",
            "name": null,
            "location": {
              "start": 122,
              "insert": 124,
              "offset": " ",
              "indent": 10,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 12,
            "docLength": null
          }
        ]
      }
    }
  },
  {
    "name": "sonner.tsx",
    "path": "web/src/components/ui/sonner.tsx",
    "content": {
      "structured": {
        "description": "A React component called Toaster that wraps a Sonner toaster with customized styles based on the current theme. It uses the Next-themes hook to retrieve the current theme and passes it as a prop to the Sonner component. The component accepts additional props, which are spread onto the Sonner component to customize its appearance according to different themes.",
        "items": []
      }
    }
  },
  {
    "name": "toast.tsx",
    "path": "web/src/components/ui/toast.tsx",
    "content": {
      "structured": {
        "description": "A set of components and utilities for creating toast notifications in a React application. It uses Radix UI's Toast library as a foundation and provides additional styling and functionality through various utility functions and custom components such as ToastProvider, ToastViewport, Toast, ToastAction, ToastTitle, ToastDescription, and ToastClose. The code also employs Lucide-React for icons and Class-Variance-Authority for styling.",
        "items": [
          {
            "id": "756ce731-722d-5691-684f-d32784551d6f",
            "ancestors": [],
            "description": "Forwards props to a Toast component.",
            "name": null,
            "location": {
              "start": 43,
              "insert": 48,
              "offset": " ",
              "indent": 2,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 15,
            "docLength": null
          }
        ]
      }
    }
  },
  {
    "name": "toaster.tsx",
    "path": "web/src/components/ui/toaster.tsx",
    "content": {
      "structured": {
        "description": "A React component called Toaster that renders a list of toast notifications provided by the useToast hook. The useToast hook returns an array of toast objects, each containing title, description and action if available. The Toaster component wraps these toasts in a ToastProvider and ToastViewport components from the ui/toast package.",
        "items": [
          {
            "id": "c138758d-733a-f699-544e-898882a0e120",
            "ancestors": [
              "960fc2f7-effd-0cb6-9e43-c237b2e6c1d4"
            ],
            "description": "Renders toasts.",
            "name": null,
            "location": {
              "start": 28,
              "insert": 29,
              "offset": " ",
              "indent": 10,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 16,
            "docLength": null
          }
        ]
      }
    }
  },
  {
    "name": "use-toast.ts",
    "path": "web/src/components/ui/use-toast.ts",
    "content": {
      "structured": {
        "description": "A reusable toast notification system using React's `useState` and `useEffect`. The system allows for adding, updating, and dismissing toasts with customizable properties such as title, description, and action elements. It utilizes the `reducer` function to manage the state of toasts and dispatches actions to update the state accordingly.",
        "items": [
          {
            "id": "01750397-ea60-f198-6845-76688d35fedf",
            "ancestors": [
              "58c10907-afdd-4db0-6649-4f996ec1e7f1"
            ],
            "description": "Removes a toast after delay.",
            "name": null,
            "location": {
              "start": 87,
              "insert": 88,
              "offset": " ",
              "indent": 4,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 9,
            "docLength": null
          },
          {
            "id": "86e71481-9db8-668a-6d4e-75986fa40c7d",
            "ancestors": [
              "7f0ce81c-6c45-a597-e144-515407d7898f"
            ],
            "description": "Adds toast IDs to removal queue.",
            "name": null,
            "location": {
              "start": 137,
              "insert": 138,
              "offset": " ",
              "indent": 10,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 5,
            "docLength": null
          },
          {
            "id": "6ba52c42-1f49-b3a5-7846-e02c58746bd1",
            "ancestors": [
              "a0e33f62-1e9d-f492-2d42-b7044a6362bc"
            ],
            "description": "Executes each listener.",
            "name": null,
            "location": {
              "start": 183,
              "insert": 184,
              "offset": " ",
              "indent": 4,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 5,
            "docLength": null
          },
          {
            "id": "91d53288-c8ac-8596-794f-7586c5159629",
            "ancestors": [
              "569ea359-0b96-1390-b244-312506adb92a"
            ],
            "description": "Manages state updates.",
            "name": null,
            "location": {
              "start": 263,
              "insert": 264,
              "offset": " ",
              "indent": 4,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 11,
            "docLength": null
          }
        ]
      }
    }
  },
  {
    "name": "NotificationService.ts",
    "path": "web/src/services/NotificationService.ts",
    "content": {
      "structured": {
        "description": "An interface `Notify` specifying properties required for a notification and schedules a local notification using Capacitor's `LocalNotifications` module. It checks permission before scheduling and logs a message if triggered in the background runner. The function takes parameters for title, body, and time of notification, defaulting to specific values if omitted.",
        "items": []
      }
    }
  }
]