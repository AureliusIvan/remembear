[
  {
    "name": "badge.tsx",
    "path": "web/src/components/ui/badge.tsx",
    "content": {
      "structured": {
        "description": "A reusable badge component using React and class-variance-authority (CVA) package. The badge can have different variants, such as default, secondary, destructive, or outline, each with its own set of styles. The CVA package is used to generate the CSS classes for these variants.",
        "items": [
          {
            "id": "96d0c56f-7a20-4eab-ec41-ab318e7fd452",
            "ancestors": [],
            "description": "Extends the `React.HTMLAttributes<HTMLDivElement>` type and merges with the `VariantProps` type from `badgeVariants`. This means it inherits all properties from both types, effectively combining their key-value pairs. The resulting interface can be used to describe props that a React component expects.",
            "name": "BadgeProps",
            "location": {
              "start": 26,
              "insert": 26,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "interface",
            "length": 3,
            "docLength": null
          },
          {
            "id": "3cb0e8f1-0218-eab2-1648-a7a54d59eee6",
            "ancestors": [],
            "description": "Renders a div element with a set of class names and props passed from its parent component, allowing customization through its `variant` property and optional additional classes provided by the `className` prop.",
            "params": [
              {
                "name": "obj",
                "default_value": null,
                "optional": false,
                "type_name": "object",
                "description": "Destructured from an interface called `BadgeProps`. It expects two properties: `className` and `variant`, along with any additional props passed through the spread operator (`...props`)."
              },
              {
                "name": "obj.className",
                "default_value": null,
                "optional": false,
                "type_name": "BadgeProps",
                "description": "Used to add custom classes to the badge component."
              },
              {
                "name": "obj.variant",
                "default_value": null,
                "optional": false,
                "type_name": "BadgeProps",
                "description": "Optional."
              }
            ],
            "returns": {
              "type_name": "ReactElement",
              "description": "A JSX element represented as an object with properties such as \"type\" and \"key\", and optionally, additional props and children."
            },
            "usage": {
              "language": "typescript",
              "code": "const myBadge = <Badge variant=\"success\">Hello</Badge>;\n",
              "description": "\nPasses props to Badge component."
            },
            "name": "Badge",
            "location": {
              "start": 30,
              "insert": 30,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "function",
            "length": 5,
            "docLength": null
          }
        ]
      }
    }
  },
  {
    "name": "carousel.tsx",
    "path": "web/src/components/ui/carousel.tsx",
    "content": {
      "structured": {
        "description": "A reusable carousel component using Embla Carousel React library for managing carousel state and behavior. It provides customizable options, plugins, and keyboard navigation. The component is wrapped in a context provider allowing child components to access carousel properties and methods such as scrolling, selecting slides, and checking scrollability.",
        "items": [
          {
            "id": "fade8a92-84c4-deaa-5a45-09e377102131",
            "ancestors": [],
            "description": "Retrieves the current carousel state and configuration from the `CarouselContext`. If no context is provided, it throws an error indicating that the hook must be used within a `<Carousel />` component.",
            "params": [],
            "returns": {
              "type_name": "object",
              "description": "Provided by `CarouselContext`."
            },
            "usage": {
              "language": "typescript",
              "code": "const carousel = useCarousel();\n",
              "description": ""
            },
            "name": "useCarousel",
            "location": {
              "start": 35,
              "insert": 35,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "function",
            "length": 9,
            "docLength": null
          },
          {
            "id": "1bb67483-f5df-fe8c-0844-4f66919fd607",
            "ancestors": [],
            "description": "Wraps Embla Carousel with React hooks.",
            "name": null,
            "location": {
              "start": 45,
              "insert": 61,
              "offset": " ",
              "indent": 4,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 106,
            "docLength": null
          },
          {
            "id": "4188d45a-9a9a-6985-214b-0b47e604e02c",
            "ancestors": [
              "1bb67483-f5df-fe8c-0844-4f66919fd607"
            ],
            "description": "Updates state when Carousel API changes.",
            "name": null,
            "location": {
              "start": 71,
              "insert": 72,
              "offset": " ",
              "indent": 6,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 8,
            "docLength": null
          },
          {
            "id": "ef5fdf77-fb11-1eb6-d64c-23cda4c3c5ad",
            "ancestors": [
              "1bb67483-f5df-fe8c-0844-4f66919fd607"
            ],
            "description": "Scrolls previous item when API allows it.",
            "name": null,
            "location": {
              "start": 80,
              "insert": 81,
              "offset": " ",
              "indent": 6,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 3,
            "docLength": null
          },
          {
            "id": "f576cfdd-0fca-0aab-0d45-6ee7f60bc7f1",
            "ancestors": [
              "1bb67483-f5df-fe8c-0844-4f66919fd607"
            ],
            "description": "Scrolls next page from API.",
            "name": null,
            "location": {
              "start": 84,
              "insert": 85,
              "offset": " ",
              "indent": 6,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 3,
            "docLength": null
          },
          {
            "id": "abde8576-0b0c-529a-8242-bc647b3f446a",
            "ancestors": [
              "1bb67483-f5df-fe8c-0844-4f66919fd607"
            ],
            "description": "Handles keyboard navigation events.",
            "name": null,
            "location": {
              "start": 88,
              "insert": 90,
              "offset": " ",
              "indent": 8,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 12,
            "docLength": null
          },
          {
            "id": "869e3eb5-b49c-8eb0-924f-ec2f5a97ee8c",
            "ancestors": [
              "1bb67483-f5df-fe8c-0844-4f66919fd607"
            ],
            "description": "Updates state when API changes.",
            "name": null,
            "location": {
              "start": 101,
              "insert": 102,
              "offset": " ",
              "indent": 6,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 7,
            "docLength": null
          },
          {
            "id": "fef330ce-0941-cb9e-3448-c147a8b405b3",
            "ancestors": [
              "1bb67483-f5df-fe8c-0844-4f66919fd607"
            ],
            "description": "Observes API changes and updates state accordingly.",
            "name": null,
            "location": {
              "start": 109,
              "insert": 110,
              "offset": " ",
              "indent": 6,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 13,
            "docLength": null
          },
          {
            "id": "ec2a6b93-82f7-f1b3-364b-13715e4b9a1d",
            "ancestors": [],
            "description": "Defines Carousel content component.",
            "name": null,
            "location": {
              "start": 153,
              "insert": 157,
              "offset": " ",
              "indent": 2,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 20,
            "docLength": null
          },
          {
            "id": "17cd8374-bd34-3bbb-d34e-c72e875b492d",
            "ancestors": [],
            "description": "Wraps a Carousel item component with React's forwardRef feature, allowing it to accept refs from its parent.",
            "name": null,
            "location": {
              "start": 175,
              "insert": 179,
              "offset": " ",
              "indent": 2,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 20,
            "docLength": null
          },
          {
            "id": "bca28052-7def-91aa-5f44-61b7bc675d74",
            "ancestors": [],
            "description": "Renders Carousel Previous button.",
            "name": null,
            "location": {
              "start": 197,
              "insert": 201,
              "offset": " ",
              "indent": 2,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 27,
            "docLength": null
          },
          {
            "id": "91fed21a-952a-ce82-ee4e-33ef3f163198",
            "ancestors": [],
            "description": "Renders Carousel Next button.",
            "name": null,
            "location": {
              "start": 226,
              "insert": 230,
              "offset": " ",
              "indent": 2,
              "comment": null
            },
            "item_type": "higher_order_invocation",
            "length": 27,
            "docLength": null
          }
        ]
      }
    }
  }
]